#!/bin/bash

#   â–ˆâ–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–ˆ
#   â–ˆ     ______                 _              _    ___  ___                                            â–ˆ
#   â–ˆ     | ___ \               (_)            | |   |  \/  |                                            â–ˆ
#   â–ˆ     | |_/ / _ __   ___     _   ___   ___ | |_  | .  . |  __ _  _ __    __ _   __ _   ___  _ __     â–ˆ
#   â–ˆ     |  __/ | '__| / _ \   | | / _ \ / __|| __| | |\/| | / _` || '_ \  / _` | / _` | / _ \| '__|    â–ˆ
#   â–ˆ     | |    | |   | (_) |  | ||  __/| (__ | |_  | |  | || (_| || | | || (_| || (_| ||  __/| |       â–ˆ
#   â–ˆ     \_|    |_|    \___/   | | \___| \___| \__| \_|  |_/ \__,_||_| |_| \__,_| \__, | \___||_|       â–ˆ
#   â–ˆ                          _/ |                                                 __/ |                â–ˆ
#   â–ˆ                         |__/                                                 |___/                 â–ˆ
#  	â–ˆ                                                                                                    â–ˆ
#   â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€
#	ðŸ¢¡ Project made by Simion Cristina, Vlad Alexandru and Vlad Rares
#	ðŸ¢¡ Group 1035
#
#  â•­â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â•®
#  â”‚                  â”‚ Sourced by main. The base script contains quality-of-life fixes. Simple functions
#  â”‚    base script   â”‚ that already exist in bash but shortened and made easier to read and remember, with
#  â”‚                  â”‚ easier to write syntaxes
#  â•°â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â•¯ 
#  â•­â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â•®
#  â”‚ Functions list:                                                                                     â”‚
#  â”‚                                                                                                     â”‚
#  â”‚ 1. goto                                                                                             â”‚
#  â”‚     syntax: goto [height] [width]                                                                   â”‚
#  â”‚     -> moves cursor position to exact location                                                      â”‚
#  â”‚                                                                                                     â”‚
#  â”‚ 2. goback                                                                                           â”‚
#  â”‚     syntax: goback <length>                                                                         â”‚
#  â”‚     -> moves cursor position to same line, specified number of characters to the left               â”‚ 
#  â”‚                                                                                                     â”‚
#  â”‚ 3. gofwd                                                                                            â”‚
#  â”‚     syntax: gofwd <length>                                                                          â”‚
#  â”‚     -> moves cursor position to same line, specified number of characters to the right              â”‚
#  â”‚                                                                                                     â”‚
#  â”‚ 4. goup                                                                                             â”‚
#  â”‚     syntax: goup <lines>                                                                            â”‚
#  â”‚     -> moves cursor position to same column if possible, specified number of lines up               â”‚ 
#  â”‚                                                                                                     â”‚
#  â”‚ 5. cursorVis                                                                                        â”‚
#  â”‚     syntax: cursorVis [1/0]                                                                         â”‚
#  â”‚     -> toggles the cursor visibility                                                                â”‚ 
#  â”‚                                                                                                     â”‚
#  â”‚ 6. savepos                                                                                          â”‚
#  â”‚     syntax: savepos                                                                                 â”‚
#  â”‚     -> saves position of the cursor                                                                 â”‚
#  â”‚                                                                                                     â”‚
#  â”‚ 7. loadpos                                                                                          â”‚
#  â”‚     syntax: loadpos                                                                                 â”‚
#  â”‚     -> loads position from the last savepos and applies it to the cursor                            â”‚
#  â”‚                                                                                                     â”‚
#  â”‚ 8. color                                                                                            â”‚
#  â”‚     syntax: color ["$color_code"]                                                                   â”‚
#  â”‚     -> prints color code to change color of text typed afterwards                                   â”‚
#  â”‚                                                                                                     â”‚
#  â”‚ 9. newLine                                                                                          â”‚
#  â”‚     syntax: newLine <lines>                                                                         â”‚
#  â”‚     -> prints specified number of new lines at the current cursor position                          â”‚
#  â”‚                                                                                                     â”‚
#  â”‚ 10. clearLine                                                                                       â”‚
#  â”‚     syntax: clearLine <"fwd/back">                                                                  â”‚
#  â”‚     -> clears line to the left or right of the cursor, or the entire line                           â”‚
#  â”‚                                                                                                     â”‚
#  â”‚ 11. space                                                                                           â”‚
#  â”‚     syntax: space <chars>                                                                           â”‚
#  â”‚     -> prints specified number of spaces at the current cursor position                             â”‚
#  â”‚                                                                                                     â”‚
#  â”‚ 12. dots                                                                                            â”‚
#  â”‚     syntax: dots <chars>                                                                            â”‚
#  â”‚     -> prints specified number of dots at the current cursor position                               â”‚
#  â”‚                                                                                                     â”‚
#  â•°â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â€•â•¯

# ========== CURSOR ========== 

# goto [height] [width]
function goto {
	if [[ $1 == "home" ]] || [[ $1 == "h" ]]; then
		tput home;
	else
		tput cup $1 $2;
	fi
}

# goback <length>
function goback {
	if [[ $1 != "" ]]; then
		tput cub $1
	else
		tput cub 1
	fi
}
gofwd 
sau
gofwd 5

# gofwd <length>
function gofwd {
	if [[ $1 != "" ]]; then
		tput cuf $1
	else
		tput cuf 1
	fi
}

# goup <lines>
function goup {
	if [[ $1 != "" ]]; then
		tput cuu $1
	else
		# tput cuu1
	fi
}

# cursorVis [1/0]
function cursorVis {
	if [[ $1 == 1 ]] || [[ $1 == "v" ]]; then
		tput cnorm;
	elif [[ $1 == 0 ]] || [[ $1 == "i" ]]; then
		tput civis;
	fi
}
# savepos
function savepos {
	tput sc
}

# loadpos
function loadpos {
	tput rc
}

# ========== TEXT ========== 

# color "$color_code"
function color {
	printf "$($1)";	
}

# newLine <lines>
function newLine {
	if [[ $1 != "" ]]; then
		for (( i = 0; i < $1; i++ )); do
			printf "\n";
		done
	else
		printf "\n";
	fi
}

# clearLine <fwd/back>
function clearLine {
	if [[ $1 == "fwd" ]]; then
		tput el;
	elif [[ $1 == "back" ]]; then
		tput el1;
	else
		tput el;
		tput el1;
	fi
}

# space <chars>
function space {
	if [[ $1 != "" ]]; then
		for (( i = 0; i < $1; i++ )); do
			printf " ";
		done
	else
		printf " ";
	fi
}

function dots {
	if [[ $1 != "" ]]; then
		for (( i = 0; i < $1; i++ )); do
			sleep $dots_wait; printf ".";
		done
	else
		sleep $dots_wait; printf ".";
	fi
}

